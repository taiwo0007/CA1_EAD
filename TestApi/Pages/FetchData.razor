@page "/fetchdata"
@using System.Text.Json.Nodes
@using System.Security.Principal
@inject HttpClient Http
@inject System.Net.Http.Headers.MediaTypeWithQualityHeaderValue headers

<PageTitle>Weather forecast</PageTitle>

<h1 class="text-info ms-5">Weather forecast</h1>
<p>@name</p>

<p>This component demonstrates fetching data from the server.</p>

@if (forecasts == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
        <tr>
            <th>Date</th>
            <th>Temp. (C)</th>
            <th>Temp. (F)</th>
            <th>Summary</th>
        </tr>
        </thead>
        <tbody>
        @foreach (var forecast in forecasts)
        {
            <tr>
                <td>@forecast.Date.ToShortDateString()</td>
                <td>@forecast.TemperatureC</td>
                <td>@forecast.TemperatureF</td>
                <td>@forecast.Summary</td>
            </tr>
        }
        </tbody>
    </table>
    
}

@code {
    private WeatherForecast[]? forecasts;
    private String name;

    protected override async Task OnInitializedAsync()
    {
        Http.DefaultRequestHeaders.Add("X-RapidAPI-Key", "7ac8da929cmsh5be541b7b0dc3c8p18afb3jsn65ff0d02c66c");
        Http.DefaultRequestHeaders.Add("X-RapidAPI-Host", "weatherapi-com.p.rapidapi.com");
        Http.DefaultRequestHeaders.Accept.Add(headers);
        @*var testing = await Http.GetFromJsonAsync<JsonContent>("https://weatherapi-com.p.rapidapi.com/forecast.json?q='London'&days='1'");*@

        var json = await Http.GetAsync("https://weatherapi-com.p.rapidapi.com/current.json?q='Ireland'");

        String responseBody = await json.Content.ReadAsStringAsync();

        var jsonObject = JsonNode.Parse(responseBody).AsObject();
        
         //name = jsonObject["current"]["temp_c"].ToString();

        name = jsonObject.ToString();
    }

    public class WeatherForecast
    {
        public DateTime Date { get; set; }

        public int TemperatureC { get; set; }

        public string? Summary { get; set; }

        public int TemperatureF => 32 + (int)(TemperatureC / 0.5556);
    }
}

